---
import carRemoved from "../images/car-removed.png";
import car from "../images/car.png";
---

<div class="container">
  <div class="image-container image-right">
    <img src={carRemoved.src} alt="Right Image" />
  </div>
  <div class="divider">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
      <path d="M0 0h24v24H0z" fill="currentColor"/>
      <path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-1-9h2v6h-2zm0-2h2v2h-2z"/>
    </svg>
  </div>
  <div class="image-container image-left">
    <img src={car.src} alt="Left Image" />
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const container = document.querySelector(".container") as HTMLElement;
    const divider = document.querySelector(".divider") as HTMLElement;
    const imageLeft = document.querySelector(".image-left") as HTMLElement;
    const imageRight = document.querySelector(
      ".image-right img"
    ) as HTMLImageElement;

    let isDragging = false;

    divider.addEventListener("mousedown", function (e: MouseEvent) {
      e.preventDefault(); // Prevent selection
      isDragging = true;
      document.body.style.cursor = "ew-resize";
    });

    document.addEventListener("mousemove", function (e: MouseEvent) {
      if (!isDragging) return;
      let containerRect = container.getBoundingClientRect();
      let offset = e.clientX - containerRect.left;
      let containerWidth = containerRect.width;
      if (offset < 0) offset = 0;
      if (offset > containerWidth) offset = containerWidth;
      let percent = (offset / containerWidth) * 100;
      divider.style.left = `${percent}%`;
      imageRight.style.left = `${100 - percent}%`;
      // Update the root variable based on the divider position
      document.documentElement.style.setProperty(
        "--divider-position",
        `${percent}%`
      );
    });

    document.addEventListener("mouseup", function (e: MouseEvent) {
      if (isDragging) {
        isDragging = false;
        document.body.style.cursor = "default";
      }
    });

    // Prevent default action to stop image selection during drag
    container.addEventListener("dragstart", function (e: DragEvent) {
      e.preventDefault();
    });

    container.addEventListener("selectstart", function (e: Event) {
      e.preventDefault();
    });
  });
</script>

<style>
  .container {
    position: relative;
    width: 80%;
    height: 600px;
    display: flex;
    margin: 0 auto;
    overflow: hidden; /* Ensure images do not overflow the container */
  }

  .image-container {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    /* display: flex; */
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Ensure images do not overflow the container */
  }

  .image-left {
    left: 0;
    z-index: 1; /* Lower z-index */
    /* clip-path: inset(0 0 0 0); */
  }

  .image-right {
    right: 0;
    clip-path: inset(0 calc(100% - var(--divider-position)) 0 0);
    z-index: 2; /* Higher z-index */
    // a filter that makes the image black and white
    

    & img {
      filter: grayscale(100%);
      filter: invert(100%);
      filter: contrast(200%);
      // webkit filters
      -webkit-filter: grayscale(100%);
      
    }
  }

  /* Add a new style for the divider position variable */

  :root {
    --divider-position: 50%; /* Initial divider position */
  }

  .image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    user-drag: none; /* Prevent image dragging */
    pointer-events: none; /* Disable pointer events on images */
  }

  .divider {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 1px; /* Adjust width as needed */
    background-color: #f2f2f2;
    cursor: ew-resize;
    left: 50%;
    transform: translateX(-50%);
    z-index: 3;

    & svg {
      position: absolute;
      top: 50%;
      left: -22px;
      background-color: #222;
      border-radius: 50%;
      padding: 10px;
      z-index: 4;
      color: white;
    }
  }
</style>
